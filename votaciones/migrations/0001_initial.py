# Generated by Django 5.2.4 on 2025-07-04 17:43

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Premio',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('nombre', models.CharField(max_length=100, unique=True, verbose_name='Nombre del Premio')),
                ('descripcion', models.TextField(blank=True, null=True, verbose_name='Descripción')),
                ('fecha_entrega', models.DateTimeField(blank=True, null=True, verbose_name='Fecha de Entrega')),
                ('activo', models.BooleanField(default=True, verbose_name='Activo para Votación')),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de Creación')),
                ('ronda_actual', models.PositiveIntegerField(default=1, verbose_name='Ronda de Votación Actual')),
                ('estado', models.CharField(choices=[('abierto', 'Abierto para Votación'), ('cerrado', 'Cerrado'), ('resultados', 'Resultados Disponibles')], default='abierto', max_length=10, verbose_name='Estado del Premio')),
            ],
            options={
                'verbose_name_plural': 'Premios',
                'ordering': ['nombre'],
            },
        ),
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('rol', models.CharField(choices=[('admin', 'Administrador'), ('votante', 'Votante')], default='votante', max_length=10)),
                ('email', models.CharField(max_length=100, unique=True)),
                ('descripcion', models.TextField(blank=True, null=True, verbose_name='Descripción del perfil')),
                ('foto_perfil', models.ImageField(blank=True, null=True, upload_to='perfiles/', verbose_name='Foto de Perfil')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name_plural': 'Usuarios',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Nominado',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('nombre', models.CharField(max_length=100, verbose_name='Nombre del Nominado')),
                ('descripcion', models.TextField(blank=True, null=True, verbose_name='Descripción')),
                ('imagen', models.ImageField(blank=True, null=True, upload_to='nominados/', verbose_name='Imagen del Nominado')),
                ('activo', models.BooleanField(default=True, verbose_name='Activo')),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de Creación')),
                ('usuarios_vinculados', models.ManyToManyField(blank=True, related_name='nominaciones_vinculadas', to=settings.AUTH_USER_MODEL, verbose_name='Usuarios Vinculados (Opcional)')),
                ('premio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='nominados', to='votaciones.premio', verbose_name='Premio')),
            ],
            options={
                'verbose_name_plural': 'Nominados',
                'ordering': ['nombre'],
                'unique_together': {('premio', 'nombre')},
            },
        ),
        migrations.CreateModel(
            name='Sugerencia',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('tipo', models.CharField(choices=[('premio', 'Nuevo Premio'), ('nominado', 'Nuevo Nominado'), ('otro', 'Otro Tipo')], max_length=10, verbose_name='Tipo de Sugerencia')),
                ('contenido', models.TextField(verbose_name='Contenido de la Sugerencia')),
                ('fecha_sugerencia', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de Sugerencia')),
                ('revisada', models.BooleanField(default=False, verbose_name='Revisada por Administrador')),
                ('notas_admin', models.TextField(blank=True, null=True, verbose_name='Notas del Administrador')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sugerencias_enviadas', to=settings.AUTH_USER_MODEL, verbose_name='Usuario')),
            ],
            options={
                'verbose_name_plural': 'Sugerencias',
                'ordering': ['-fecha_sugerencia'],
            },
        ),
        migrations.CreateModel(
            name='Voto',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('fecha_voto', models.DateTimeField(auto_now_add=True, verbose_name='Fecha del Voto')),
                ('ronda', models.PositiveIntegerField(default=1, verbose_name='Ronda de Votación')),
                ('nominado', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='votos_recibidos', to='votaciones.nominado', verbose_name='Nominado Votado')),
                ('premio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='votos', to='votaciones.premio', verbose_name='Premio Votado')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='votos_emitidos', to=settings.AUTH_USER_MODEL, verbose_name='Usuario')),
            ],
            options={
                'verbose_name_plural': 'Votos',
                'ordering': ['-fecha_voto'],
                'unique_together': {('usuario', 'premio', 'ronda')},
            },
        ),
    ]
